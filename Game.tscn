[gd_scene load_steps=23 format=2]

[ext_resource path="res://Game.gd" type="Script" id=1]
[ext_resource path="res://Lava.tscn" type="PackedScene" id=2]
[ext_resource path="res://Floor1.tscn" type="PackedScene" id=3]
[ext_resource path="res://Platformer.gd" type="Script" id=4]
[ext_resource path="res://texture_pietra.jpg" type="Texture" id=5]
[ext_resource path="res://Default OBJ.material" type="Material" id=6]
[ext_resource path="res://Floor2.gd" type="Script" id=7]
[ext_resource path="res://Bridge.tscn" type="PackedScene" id=8]
[ext_resource path="res://pillars.tscn" type="PackedScene" id=9]
[ext_resource path="res://default_env.tres" type="Environment" id=10]
[ext_resource path="res://Player.gd" type="Script" id=11]
[ext_resource path="res://ARVROrigin.tscn" type="PackedScene" id=12]

[sub_resource type="BoxShape" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Bright/Contrast'
	// type: 'ShaderNodeBrightContrast'
	// input sockets handling
	vec4 node1_in0_color = vec4(0.15232588350772858, 0.09119367599487305,
		0.07094532251358032, 1.0);
	float node1_in1_bright = float(0.0);
	float node1_in2_contrast = float(0.29999998211860657);
	// output sockets definitions
	
	// Warn: node not supported
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node2_in0_basecolor = node0_out0_color;
	float node2_in1_subsurface = float(0.0);
	vec3 node2_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node2_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node2_in4_metallic = float(0.30000001192092896);
	float node2_in5_specular = float(0.020833343267440796);
	float node2_in6_speculartint = float(0.0);
	float node2_in7_roughness = float(1.0);
	float node2_in8_anisotropic = float(0.0);
	float node2_in9_anisotropicrotation = float(0.0);
	float node2_in10_sheen = float(0.0);
	float node2_in11_sheentint = float(0.5104166865348816);
	float node2_in12_clearcoat = float(0.0);
	float node2_in13_clearcoatroughness = float(0.029999999329447746);
	float node2_in14_ior = float(1.4500000476837158);
	float node2_in15_transmission = float(0.0);
	float node2_in16_transmissionroughness = float(0.0);
	vec4 node2_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node2_in18_alpha = float(1.0);
	vec3 node2_in19_normal = NORMAL;
	vec3 node2_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node2_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node2_bsdf_out0_albedo;
	float node2_bsdf_out1_sss_strength;
	float node2_bsdf_out3_specular;
	float node2_bsdf_out2_metallic;
	float node2_bsdf_out4_roughness;
	float node2_bsdf_out5_clearcoat;
	float node2_bsdf_out6_clearcoat_gloss;
	float node2_bsdf_out7_anisotropy;
	float node2_bsdf_out8_transmission;
	float node2_bsdf_out9_ior;
	
	node_bsdf_principled(node2_in0_basecolor, node2_in1_subsurface,
		node2_in3_subsurfacecolor, node2_in4_metallic, node2_in5_specular,
		node2_in7_roughness, node2_in12_clearcoat, node2_in13_clearcoatroughness,
		node2_in8_anisotropic, node2_in15_transmission, node2_in14_ior,
		node2_bsdf_out0_albedo, node2_bsdf_out1_sss_strength, node2_bsdf_out2_metallic,
		node2_bsdf_out3_specular, node2_bsdf_out4_roughness, node2_bsdf_out5_clearcoat,
		node2_bsdf_out6_clearcoat_gloss, node2_bsdf_out7_anisotropy,
		node2_bsdf_out8_transmission, node2_bsdf_out9_ior);
	
	
	ALBEDO = node2_bsdf_out0_albedo;
	SSS_STRENGTH = node2_bsdf_out1_sss_strength;
	SPECULAR = node2_bsdf_out3_specular;
	METALLIC = node2_bsdf_out2_metallic;
	ROUGHNESS = node2_bsdf_out4_roughness;
	CLEARCOAT = node2_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node2_bsdf_out6_clearcoat_gloss;
	NORMAL = node2_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node2_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node2_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node2_bsdf_out7_anisotropy;
}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/texture_0 = ExtResource( 5 )

[sub_resource type="ArrayMesh" id=4]
surfaces/0 = {
"aabb": AABB( -1, -1, -1, 2, 2.00001, 2 ),
"array_data": PoolByteArray( 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 191, 129, 0, 0, 0, 127, 0, 0, 129, 27, 54, 242, 59, 99, 37, 114, 63, 25, 57, 91, 63, 99, 37, 114, 63, 129, 0, 0, 0, 127, 0, 0, 129, 27, 54, 13, 58, 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 63, 129, 0, 0, 0, 127, 0, 0, 129, 27, 54, 13, 58, 127, 135, 126, 63, 0, 0, 128, 63, 199, 42, 125, 63, 0, 127, 0, 0, 149, 0, 67, 127, 5, 54, 1, 58, 5, 20, 126, 63, 0, 0, 128, 63, 7, 126, 124, 63, 0, 127, 0, 0, 149, 0, 67, 127, 5, 54, 2, 58, 232, 244, 124, 63, 0, 0, 128, 63, 232, 244, 124, 63, 0, 127, 0, 0, 149, 0, 67, 127, 6, 54, 3, 58, 17, 27, 124, 191, 0, 0, 128, 63, 167, 61, 121, 191, 0, 127, 0, 0, 163, 0, 85, 127, 248, 56, 252, 59, 121, 233, 122, 191, 0, 0, 128, 63, 71, 116, 119, 191, 0, 127, 0, 0, 171, 0, 93, 127, 249, 56, 249, 59, 138, 119, 120, 191, 0, 0, 128, 63, 138, 119, 120, 191, 0, 127, 0, 0, 149, 0, 67, 127, 248, 56, 248, 59, 99, 37, 114, 191, 25, 57, 91, 63, 99, 37, 114, 63, 127, 0, 0, 0, 127, 0, 0, 129, 242, 56, 13, 58, 99, 37, 114, 191, 234, 151, 72, 63, 99, 37, 114, 191, 127, 0, 0, 0, 127, 0, 0, 129, 242, 56, 242, 59, 99, 37, 114, 191, 25, 57, 91, 63, 99, 37, 114, 191, 127, 0, 0, 0, 127, 0, 0, 129, 242, 56, 242, 59, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 63, 127, 0, 0, 0, 127, 0, 0, 129, 242, 56, 13, 58, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 191, 127, 0, 0, 0, 127, 0, 0, 129, 242, 56, 242, 59, 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 63, 0, 0, 129, 0, 127, 0, 0, 129, 27, 54, 13, 58, 99, 37, 114, 191, 25, 57, 91, 63, 99, 37, 114, 63, 0, 0, 129, 0, 127, 0, 0, 129, 242, 56, 13, 58, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 63, 0, 0, 129, 0, 127, 0, 0, 129, 242, 56, 13, 58, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 191, 0, 0, 127, 0, 127, 0, 0, 129, 242, 56, 242, 59, 99, 37, 114, 63, 25, 57, 91, 63, 99, 37, 114, 191, 0, 0, 127, 0, 127, 0, 0, 129, 27, 54, 242, 59, 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 191, 0, 0, 127, 0, 127, 0, 0, 129, 27, 54, 242, 59, 99, 37, 114, 191, 234, 151, 72, 63, 99, 37, 114, 191, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 242, 59, 99, 37, 114, 63, 234, 151, 72, 63, 99, 37, 114, 63, 0, 127, 0, 0, 129, 0, 0, 127, 27, 54, 13, 58, 99, 37, 114, 63, 234, 151, 72, 63, 99, 37, 114, 191, 0, 127, 0, 0, 129, 0, 0, 127, 27, 54, 242, 59, 99, 37, 114, 63, 25, 57, 91, 63, 99, 37, 114, 63, 0, 0, 129, 0, 127, 0, 0, 129, 27, 54, 13, 58, 99, 37, 114, 191, 234, 151, 72, 63, 99, 37, 114, 63, 0, 0, 129, 0, 127, 0, 0, 129, 242, 56, 13, 58, 99, 37, 114, 191, 25, 57, 91, 63, 99, 37, 114, 191, 0, 0, 127, 0, 127, 0, 0, 129, 242, 56, 242, 59, 99, 37, 114, 63, 234, 151, 72, 63, 99, 37, 114, 191, 0, 0, 127, 0, 127, 0, 0, 129, 27, 54, 242, 59, 99, 37, 114, 63, 25, 57, 91, 63, 99, 37, 114, 191, 129, 0, 0, 0, 127, 0, 0, 129, 27, 54, 242, 59, 99, 37, 114, 63, 234, 151, 72, 63, 99, 37, 114, 63, 129, 0, 0, 0, 127, 0, 0, 129, 27, 54, 13, 58, 127, 135, 126, 63, 0, 0, 128, 63, 199, 42, 125, 63, 0, 127, 0, 0, 196, 0, 111, 127, 5, 54, 1, 58, 0, 0, 128, 63, 0, 0, 128, 63, 187, 157, 121, 63, 0, 127, 0, 0, 196, 0, 111, 127, 4, 54, 2, 58, 5, 20, 126, 63, 0, 0, 128, 63, 7, 126, 124, 63, 0, 127, 0, 0, 196, 0, 111, 127, 5, 54, 2, 58, 0, 0, 128, 63, 0, 0, 128, 63, 187, 157, 121, 63, 117, 0, 48, 0, 0, 127, 0, 127, 0, 54, 12, 52, 127, 135, 126, 63, 0, 0, 128, 191, 199, 42, 125, 63, 117, 0, 48, 0, 0, 127, 0, 127, 0, 48, 8, 52, 0, 0, 128, 63, 0, 0, 128, 191, 187, 157, 121, 63, 117, 0, 48, 0, 0, 127, 0, 127, 0, 48, 12, 52, 139, 140, 122, 191, 0, 0, 128, 63, 72, 107, 124, 63, 0, 127, 0, 0, 252, 0, 126, 127, 253, 56, 6, 58, 239, 231, 120, 191, 0, 0, 128, 63, 51, 82, 123, 63, 0, 127, 0, 0, 246, 0, 126, 127, 250, 56, 5, 58, 19, 157, 121, 191, 0, 0, 128, 63, 19, 157, 121, 63, 0, 127, 0, 0, 208, 0, 117, 127, 249, 56, 6, 58, 222, 5, 122, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 127, 0, 0, 130, 0, 254, 127, 11, 54, 0, 58, 30, 225, 124, 63, 0, 0, 128, 63, 24, 209, 126, 63, 0, 127, 0, 0, 136, 0, 216, 127, 7, 54, 1, 58, 46, 86, 124, 63, 0, 0, 128, 63, 75, 116, 126, 63, 0, 127, 0, 0, 130, 0, 6, 127, 7, 54, 1, 58, 222, 5, 122, 63, 0, 0, 128, 191, 0, 0, 128, 63, 48, 0, 117, 0, 0, 127, 0, 127, 0, 54, 250, 57, 30, 225, 124, 63, 0, 0, 128, 63, 24, 209, 126, 63, 48, 0, 117, 0, 0, 127, 0, 127, 0, 57, 252, 57, 222, 5, 122, 63, 0, 0, 128, 63, 0, 0, 128, 63, 48, 0, 117, 0, 0, 127, 0, 127, 0, 57, 250, 57, 30, 225, 124, 63, 0, 0, 128, 191, 24, 209, 126, 63, 89, 0, 89, 0, 0, 127, 0, 127, 0, 54, 252, 57, 127, 135, 126, 63, 0, 0, 128, 63, 199, 42, 125, 63, 89, 0, 89, 0, 0, 127, 0, 127, 0, 57, 254, 57, 30, 225, 124, 63, 0, 0, 128, 63, 24, 209, 126, 63, 89, 0, 89, 0, 0, 127, 0, 127, 0, 57, 252, 57, 232, 244, 124, 63, 0, 0, 128, 63, 232, 244, 124, 63, 0, 127, 0, 0, 131, 0, 22, 127, 6, 54, 3, 58, 222, 5, 122, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 57, 250, 57, 83, 231, 113, 191, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 54, 14, 56, 222, 5, 122, 63, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 54, 250, 57, 137, 235, 120, 63, 0, 0, 128, 63, 184, 145, 122, 191, 0, 127, 0, 0, 233, 0, 124, 127, 7, 54, 247, 59, 173, 109, 118, 63, 0, 0, 128, 63, 121, 231, 120, 191, 0, 127, 0, 0, 246, 0, 126, 127, 16, 54, 247, 59, 87, 39, 119, 63, 0, 0, 128, 63, 87, 39, 119, 191, 0, 127, 0, 0, 155, 0, 76, 127, 17, 54, 247, 59, 83, 231, 113, 191, 0, 0, 128, 63, 0, 0, 128, 63, 0, 127, 0, 0, 24, 0, 124, 127, 251, 56, 4, 58, 83, 231, 113, 191, 0, 0, 128, 63, 0, 0, 128, 63, 208, 0, 117, 0, 0, 127, 0, 127, 0, 57, 14, 56, 139, 140, 122, 191, 0, 0, 128, 191, 72, 107, 124, 63, 208, 0, 117, 0, 0, 127, 0, 127, 0, 54, 1, 56, 83, 231, 113, 191, 0, 0, 128, 191, 0, 0, 128, 63, 208, 0, 117, 0, 0, 127, 0, 127, 0, 54, 14, 56, 0, 0, 128, 191, 0, 0, 128, 63, 73, 14, 116, 63, 0, 127, 0, 0, 130, 0, 8, 127, 0, 57, 11, 58, 212, 240, 125, 191, 0, 0, 128, 63, 255, 6, 121, 63, 0, 127, 0, 0, 195, 0, 110, 127, 253, 56, 8, 58, 55, 79, 125, 191, 0, 0, 128, 63, 26, 21, 120, 63, 0, 127, 0, 0, 142, 0, 55, 127, 253, 56, 7, 58, 0, 0, 128, 191, 0, 0, 128, 191, 73, 14, 116, 63, 139, 0, 48, 0, 0, 127, 0, 127, 0, 54, 232, 55, 212, 240, 125, 191, 0, 0, 128, 63, 255, 6, 121, 63, 139, 0, 48, 0, 0, 127, 0, 127, 0, 57, 246, 55, 0, 0, 128, 191, 0, 0, 128, 63, 73, 14, 116, 63, 139, 0, 48, 0, 0, 127, 0, 127, 0, 57, 232, 55, 139, 140, 122, 191, 0, 0, 128, 63, 72, 107, 124, 63, 167, 0, 89, 0, 0, 127, 0, 127, 0, 57, 1, 56, 212, 240, 125, 191, 0, 0, 128, 191, 255, 6, 121, 63, 167, 0, 89, 0, 0, 127, 0, 127, 0, 54, 246, 55, 139, 140, 122, 191, 0, 0, 128, 191, 72, 107, 124, 63, 167, 0, 89, 0, 0, 127, 0, 127, 0, 54, 1, 56, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 63, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 13, 58, 0, 0, 128, 191, 0, 0, 128, 63, 73, 14, 116, 63, 129, 0, 0, 0, 0, 127, 0, 127, 0, 57, 232, 55, 0, 0, 128, 191, 0, 0, 128, 191, 216, 214, 111, 191, 129, 0, 0, 0, 0, 127, 0, 127, 0, 54, 32, 52, 0, 0, 128, 191, 0, 0, 128, 191, 73, 14, 116, 63, 129, 0, 0, 0, 0, 127, 0, 127, 0, 54, 232, 55, 0, 0, 128, 191, 0, 0, 128, 63, 216, 214, 111, 191, 0, 127, 0, 0, 196, 0, 111, 127, 250, 56, 250, 59, 0, 0, 128, 191, 0, 0, 128, 63, 216, 214, 111, 191, 139, 0, 208, 0, 0, 127, 0, 127, 0, 57, 32, 52, 17, 27, 124, 191, 0, 0, 128, 191, 167, 61, 121, 191, 139, 0, 208, 0, 0, 127, 0, 127, 0, 54, 21, 52, 0, 0, 128, 191, 0, 0, 128, 191, 216, 214, 111, 191, 139, 0, 208, 0, 0, 127, 0, 127, 0, 54, 32, 52, 28, 207, 107, 63, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 0, 127, 0, 0, 127, 235, 56, 0, 52, 83, 231, 113, 191, 0, 0, 128, 191, 0, 0, 128, 63, 0, 129, 0, 0, 127, 0, 0, 127, 28, 54, 0, 0, 0, 0, 128, 191, 0, 0, 128, 191, 216, 214, 111, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 191, 51, 20, 234, 113, 191, 0, 0, 128, 63, 0, 0, 128, 191, 0, 127, 0, 0, 130, 0, 254, 127, 241, 56, 0, 60, 0, 198, 119, 191, 0, 0, 128, 63, 184, 146, 125, 191, 0, 127, 0, 0, 136, 0, 216, 127, 246, 56, 253, 59, 252, 168, 118, 191, 0, 0, 128, 63, 69, 212, 124, 191, 0, 127, 0, 0, 131, 0, 238, 127, 246, 56, 252, 59, 20, 234, 113, 191, 0, 0, 128, 191, 0, 0, 128, 191, 208, 0, 139, 0, 0, 127, 0, 127, 0, 57, 227, 55, 0, 198, 119, 191, 0, 0, 128, 63, 184, 146, 125, 191, 208, 0, 139, 0, 0, 127, 0, 127, 0, 59, 239, 55, 20, 234, 113, 191, 0, 0, 128, 63, 0, 0, 128, 191, 208, 0, 139, 0, 0, 127, 0, 127, 0, 59, 227, 55, 0, 198, 119, 191, 0, 0, 128, 191, 184, 146, 125, 191, 167, 0, 167, 0, 0, 127, 0, 127, 0, 57, 239, 55, 17, 27, 124, 191, 0, 0, 128, 63, 167, 61, 121, 191, 167, 0, 167, 0, 0, 127, 0, 127, 0, 59, 248, 55, 0, 198, 119, 191, 0, 0, 128, 63, 184, 146, 125, 191, 167, 0, 167, 0, 0, 127, 0, 127, 0, 59, 239, 55, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 191, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 242, 59, 20, 234, 113, 191, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 59, 227, 55, 28, 207, 107, 63, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 57, 40, 52, 20, 234, 113, 191, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 57, 227, 55, 0, 0, 128, 63, 0, 0, 128, 63, 148, 78, 112, 191, 0, 127, 0, 0, 130, 0, 8, 127, 0, 54, 240, 59, 82, 15, 125, 63, 0, 0, 128, 63, 3, 181, 116, 191, 0, 127, 0, 0, 157, 0, 79, 127, 5, 54, 244, 59, 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 191, 0, 127, 0, 0, 129, 0, 0, 127, 27, 54, 242, 59, 28, 207, 107, 63, 0, 0, 128, 63, 0, 0, 128, 191, 0, 127, 0, 0, 24, 0, 124, 127, 12, 54, 249, 59, 28, 207, 107, 63, 0, 0, 128, 63, 0, 0, 128, 191, 48, 0, 139, 0, 0, 127, 0, 127, 0, 59, 40, 52, 137, 235, 120, 63, 0, 0, 128, 191, 184, 145, 122, 191, 48, 0, 139, 0, 0, 127, 0, 127, 0, 57, 25, 52, 28, 207, 107, 63, 0, 0, 128, 191, 0, 0, 128, 191, 48, 0, 139, 0, 0, 127, 0, 127, 0, 57, 40, 52, 0, 0, 128, 63, 0, 0, 128, 63, 148, 78, 112, 191, 127, 0, 0, 0, 0, 127, 0, 127, 0, 54, 224, 55, 0, 0, 128, 63, 0, 0, 128, 191, 187, 157, 121, 63, 127, 0, 0, 0, 0, 127, 0, 127, 0, 48, 12, 52, 0, 0, 128, 63, 0, 0, 128, 191, 148, 78, 112, 191, 127, 0, 0, 0, 0, 127, 0, 127, 0, 48, 224, 55, 240, 191, 125, 63, 0, 0, 128, 63, 81, 189, 117, 191, 0, 127, 0, 0, 195, 0, 110, 127, 5, 54, 244, 59, 0, 0, 128, 63, 0, 0, 128, 191, 148, 78, 112, 191, 117, 0, 208, 0, 0, 127, 0, 127, 0, 48, 224, 55, 240, 191, 125, 63, 0, 0, 128, 63, 81, 189, 117, 191, 117, 0, 208, 0, 0, 127, 0, 127, 0, 54, 235, 55, 0, 0, 128, 63, 0, 0, 128, 63, 148, 78, 112, 191, 117, 0, 208, 0, 0, 127, 0, 127, 0, 54, 224, 55, 240, 191, 125, 63, 0, 0, 128, 191, 81, 189, 117, 191, 89, 0, 167, 0, 0, 127, 0, 127, 0, 48, 235, 55, 137, 235, 120, 63, 0, 0, 128, 63, 184, 145, 122, 191, 89, 0, 167, 0, 0, 127, 0, 127, 0, 54, 245, 55, 240, 191, 125, 63, 0, 0, 128, 63, 81, 189, 117, 191, 89, 0, 167, 0, 0, 127, 0, 127, 0, 54, 235, 55, 30, 225, 124, 63, 0, 0, 128, 63, 24, 209, 126, 63, 0, 127, 0, 0, 149, 0, 67, 127, 7, 54, 0, 58, 127, 135, 126, 63, 0, 0, 128, 63, 199, 42, 125, 63, 0, 127, 0, 0, 149, 0, 67, 127, 5, 54, 1, 58, 252, 168, 118, 191, 0, 0, 128, 63, 69, 212, 124, 191, 0, 127, 0, 0, 149, 0, 67, 127, 246, 56, 252, 59, 0, 198, 119, 191, 0, 0, 128, 63, 184, 146, 125, 191, 0, 127, 0, 0, 149, 0, 67, 127, 246, 56, 254, 59, 99, 37, 114, 191, 234, 151, 72, 63, 99, 37, 114, 63, 127, 0, 0, 0, 127, 0, 0, 129, 242, 56, 13, 58, 99, 37, 114, 191, 234, 151, 72, 63, 99, 37, 114, 63, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 13, 58, 99, 37, 114, 63, 234, 151, 72, 63, 99, 37, 114, 63, 0, 0, 129, 0, 127, 0, 0, 129, 27, 54, 13, 58, 99, 37, 114, 191, 234, 151, 72, 63, 99, 37, 114, 191, 0, 0, 127, 0, 127, 0, 0, 129, 242, 56, 242, 59, 99, 37, 114, 63, 234, 151, 72, 63, 99, 37, 114, 191, 129, 0, 0, 0, 127, 0, 0, 129, 27, 54, 242, 59, 0, 0, 128, 63, 0, 0, 128, 63, 187, 157, 121, 63, 117, 0, 48, 0, 0, 127, 0, 127, 0, 54, 12, 52, 127, 135, 126, 63, 0, 0, 128, 63, 199, 42, 125, 63, 117, 0, 48, 0, 0, 127, 0, 127, 0, 54, 8, 52, 127, 135, 126, 63, 0, 0, 128, 191, 199, 42, 125, 63, 117, 0, 48, 0, 0, 127, 0, 127, 0, 48, 8, 52, 19, 157, 121, 191, 0, 0, 128, 63, 19, 157, 121, 63, 0, 127, 0, 0, 208, 0, 117, 127, 249, 56, 6, 58, 55, 79, 125, 191, 0, 0, 128, 63, 26, 21, 120, 63, 0, 127, 0, 0, 208, 0, 117, 127, 253, 56, 7, 58, 212, 240, 125, 191, 0, 0, 128, 63, 255, 6, 121, 63, 0, 127, 0, 0, 208, 0, 117, 127, 254, 56, 8, 58, 212, 240, 125, 191, 0, 0, 128, 63, 255, 6, 121, 63, 0, 127, 0, 0, 208, 0, 117, 127, 254, 56, 8, 58, 139, 140, 122, 191, 0, 0, 128, 63, 72, 107, 124, 63, 0, 127, 0, 0, 208, 0, 117, 127, 253, 56, 6, 58, 19, 157, 121, 191, 0, 0, 128, 63, 19, 157, 121, 63, 0, 127, 0, 0, 208, 0, 117, 127, 249, 56, 6, 58, 222, 5, 122, 63, 0, 0, 128, 191, 0, 0, 128, 63, 48, 0, 117, 0, 0, 127, 0, 127, 0, 54, 250, 57, 30, 225, 124, 63, 0, 0, 128, 191, 24, 209, 126, 63, 48, 0, 117, 0, 0, 127, 0, 127, 0, 54, 252, 57, 30, 225, 124, 63, 0, 0, 128, 63, 24, 209, 126, 63, 48, 0, 117, 0, 0, 127, 0, 127, 0, 57, 252, 57, 30, 225, 124, 63, 0, 0, 128, 191, 24, 209, 126, 63, 89, 0, 89, 0, 0, 127, 0, 127, 0, 54, 252, 57, 127, 135, 126, 63, 0, 0, 128, 191, 199, 42, 125, 63, 89, 0, 89, 0, 0, 127, 0, 127, 0, 54, 254, 57, 127, 135, 126, 63, 0, 0, 128, 63, 199, 42, 125, 63, 89, 0, 89, 0, 0, 127, 0, 127, 0, 57, 254, 57, 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 63, 0, 127, 0, 0, 129, 0, 0, 127, 27, 54, 13, 58, 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 63, 0, 127, 0, 0, 129, 0, 0, 127, 27, 54, 13, 58, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 63, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 13, 58, 83, 231, 113, 191, 0, 0, 128, 63, 0, 0, 128, 63, 0, 127, 0, 0, 129, 0, 0, 127, 241, 56, 0, 58, 83, 231, 113, 191, 0, 0, 128, 63, 0, 0, 128, 63, 0, 127, 0, 0, 129, 0, 0, 127, 241, 56, 0, 58, 19, 157, 121, 191, 0, 0, 128, 63, 19, 157, 121, 63, 0, 127, 0, 0, 129, 0, 0, 127, 249, 56, 6, 58, 239, 231, 120, 191, 0, 0, 128, 63, 51, 82, 123, 63, 0, 127, 0, 0, 129, 0, 0, 127, 248, 56, 4, 58, 83, 231, 113, 191, 0, 0, 128, 63, 0, 0, 128, 63, 0, 127, 0, 0, 129, 0, 0, 127, 241, 56, 0, 58, 83, 231, 113, 191, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 57, 14, 56, 240, 191, 125, 63, 0, 0, 128, 63, 81, 189, 117, 191, 0, 127, 0, 0, 208, 0, 117, 127, 2, 54, 244, 59, 139, 140, 122, 191, 0, 0, 128, 63, 72, 107, 124, 63, 208, 0, 117, 0, 0, 127, 0, 127, 0, 57, 1, 56, 212, 240, 125, 191, 0, 0, 128, 191, 255, 6, 121, 63, 139, 0, 48, 0, 0, 127, 0, 127, 0, 54, 246, 55, 212, 240, 125, 191, 0, 0, 128, 63, 255, 6, 121, 63, 167, 0, 89, 0, 0, 127, 0, 127, 0, 57, 246, 55, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 63, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 13, 58, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 191, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 242, 59, 0, 0, 128, 191, 0, 0, 128, 63, 216, 214, 111, 191, 0, 127, 0, 0, 129, 0, 0, 127, 0, 57, 239, 59, 0, 0, 128, 191, 0, 0, 128, 63, 216, 214, 111, 191, 0, 127, 0, 0, 129, 0, 0, 127, 0, 57, 239, 59, 99, 37, 114, 191, 0, 0, 128, 63, 99, 37, 114, 191, 0, 127, 0, 0, 129, 0, 0, 127, 242, 56, 242, 59, 138, 119, 120, 191, 0, 0, 128, 63, 138, 119, 120, 191, 0, 127, 0, 0, 129, 0, 0, 127, 248, 56, 248, 59, 121, 233, 122, 191, 0, 0, 128, 63, 71, 116, 119, 191, 0, 127, 0, 0, 129, 0, 0, 127, 250, 56, 247, 59, 0, 0, 128, 191, 0, 0, 128, 63, 216, 214, 111, 191, 0, 127, 0, 0, 129, 0, 0, 127, 0, 57, 239, 59, 0, 0, 128, 191, 0, 0, 128, 63, 216, 214, 111, 191, 129, 0, 0, 0, 0, 127, 0, 127, 0, 57, 32, 52, 0, 0, 128, 191, 0, 0, 128, 63, 216, 214, 111, 191, 139, 0, 208, 0, 0, 127, 0, 127, 0, 57, 32, 52, 17, 27, 124, 191, 0, 0, 128, 63, 167, 61, 121, 191, 139, 0, 208, 0, 0, 127, 0, 127, 0, 57, 21, 52, 17, 27, 124, 191, 0, 0, 128, 191, 167, 61, 121, 191, 139, 0, 208, 0, 0, 127, 0, 127, 0, 54, 21, 52, 0, 0, 128, 191, 0, 0, 128, 191, 73, 14, 116, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 248, 29, 0, 0, 128, 191, 0, 0, 128, 191, 216, 214, 111, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 191, 51, 17, 27, 124, 191, 0, 0, 128, 191, 167, 61, 121, 191, 0, 129, 0, 0, 127, 0, 0, 127, 7, 54, 228, 51, 20, 234, 113, 191, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 0, 127, 0, 0, 127, 28, 54, 0, 52, 0, 198, 119, 191, 0, 0, 128, 191, 184, 146, 125, 191, 0, 129, 0, 0, 127, 0, 0, 127, 16, 54, 246, 51, 20, 234, 113, 191, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 0, 127, 0, 0, 127, 28, 54, 0, 52, 28, 207, 107, 63, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 0, 127, 0, 0, 127, 235, 56, 0, 52, 0, 0, 128, 191, 0, 0, 128, 191, 216, 214, 111, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 191, 51, 28, 207, 107, 63, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 0, 127, 0, 0, 127, 235, 56, 0, 52, 137, 235, 120, 63, 0, 0, 128, 191, 184, 145, 122, 191, 0, 129, 0, 0, 127, 0, 0, 127, 248, 56, 234, 51, 0, 0, 128, 63, 0, 0, 128, 191, 148, 78, 112, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 57, 193, 51, 240, 191, 125, 63, 0, 0, 128, 191, 81, 189, 117, 191, 0, 129, 0, 0, 127, 0, 0, 127, 253, 56, 214, 51, 0, 0, 128, 63, 0, 0, 128, 191, 187, 157, 121, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 57, 98, 26, 0, 0, 128, 63, 0, 0, 128, 191, 187, 157, 121, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 57, 98, 26, 127, 135, 126, 63, 0, 0, 128, 191, 199, 42, 125, 63, 0, 129, 0, 0, 127, 0, 0, 127, 254, 56, 170, 21, 222, 5, 122, 63, 0, 0, 128, 191, 0, 0, 128, 63, 0, 129, 0, 0, 127, 0, 0, 127, 250, 56, 0, 0, 30, 225, 124, 63, 0, 0, 128, 191, 24, 209, 126, 63, 0, 129, 0, 0, 127, 0, 0, 127, 252, 56, 187, 16, 83, 231, 113, 191, 0, 0, 128, 191, 0, 0, 128, 63, 0, 129, 0, 0, 127, 0, 0, 127, 28, 54, 0, 0, 139, 140, 122, 191, 0, 0, 128, 191, 72, 107, 124, 63, 0, 129, 0, 0, 127, 0, 0, 127, 10, 54, 41, 23, 212, 240, 125, 191, 0, 0, 128, 191, 255, 6, 121, 63, 0, 129, 0, 0, 127, 0, 0, 127, 4, 54, 249, 26, 28, 207, 107, 63, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 0, 127, 0, 0, 127, 235, 56, 0, 52, 0, 0, 128, 63, 0, 0, 128, 191, 187, 157, 121, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 57, 98, 26, 83, 231, 113, 191, 0, 0, 128, 191, 0, 0, 128, 63, 0, 129, 0, 0, 127, 0, 0, 127, 28, 54, 0, 0, 0, 198, 119, 191, 0, 0, 128, 191, 184, 146, 125, 191, 208, 0, 139, 0, 0, 127, 0, 127, 0, 57, 239, 55, 17, 27, 124, 191, 0, 0, 128, 191, 167, 61, 121, 191, 167, 0, 167, 0, 0, 127, 0, 127, 0, 57, 248, 55, 138, 119, 120, 191, 0, 0, 128, 63, 138, 119, 120, 191, 0, 127, 0, 0, 129, 0, 0, 127, 248, 56, 248, 59, 99, 37, 114, 63, 0, 0, 128, 63, 99, 37, 114, 191, 0, 127, 0, 0, 129, 0, 0, 127, 27, 54, 242, 59, 28, 207, 107, 63, 0, 0, 128, 63, 0, 0, 128, 191, 0, 127, 0, 0, 129, 0, 0, 127, 40, 54, 0, 60, 87, 39, 119, 63, 0, 0, 128, 63, 87, 39, 119, 191, 0, 127, 0, 0, 129, 0, 0, 127, 17, 54, 247, 59, 173, 109, 118, 63, 0, 0, 128, 63, 121, 231, 120, 191, 0, 127, 0, 0, 129, 0, 0, 127, 19, 54, 248, 59, 28, 207, 107, 63, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 59, 40, 52, 0, 0, 128, 63, 0, 0, 128, 63, 187, 157, 121, 63, 0, 127, 0, 0, 129, 0, 0, 127, 0, 54, 6, 58, 5, 20, 126, 63, 0, 0, 128, 63, 7, 126, 124, 63, 0, 127, 0, 0, 129, 0, 0, 127, 3, 54, 3, 58, 137, 235, 120, 63, 0, 0, 128, 63, 184, 145, 122, 191, 48, 0, 139, 0, 0, 127, 0, 127, 0, 59, 25, 52, 0, 0, 128, 63, 0, 0, 128, 63, 187, 157, 121, 63, 127, 0, 0, 0, 0, 127, 0, 127, 0, 54, 12, 52, 240, 191, 125, 63, 0, 0, 128, 191, 81, 189, 117, 191, 117, 0, 208, 0, 0, 127, 0, 127, 0, 48, 235, 55, 240, 191, 125, 63, 0, 0, 128, 191, 81, 189, 117, 191, 89, 0, 167, 0, 0, 127, 0, 127, 0, 48, 235, 55, 137, 235, 120, 63, 0, 0, 128, 191, 184, 145, 122, 191, 89, 0, 167, 0, 0, 127, 0, 127, 0, 48, 245, 55, 137, 235, 120, 63, 0, 0, 128, 63, 184, 145, 122, 191, 89, 0, 167, 0, 0, 127, 0, 127, 0, 54, 245, 55 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0, 12, 0, 13, 0, 11, 0, 14, 0, 16, 0, 15, 0, 17, 0, 19, 0, 18, 0, 20, 0, 22, 0, 21, 0, 23, 0, 15, 0, 24, 0, 25, 0, 18, 0, 26, 0, 27, 0, 1, 0, 28, 0, 29, 0, 31, 0, 30, 0, 32, 0, 34, 0, 33, 0, 35, 0, 37, 0, 36, 0, 38, 0, 40, 0, 39, 0, 41, 0, 43, 0, 42, 0, 44, 0, 46, 0, 45, 0, 38, 0, 47, 0, 40, 0, 48, 0, 50, 0, 49, 0, 51, 0, 53, 0, 52, 0, 35, 0, 36, 0, 54, 0, 55, 0, 57, 0, 56, 0, 58, 0, 60, 0, 59, 0, 61, 0, 63, 0, 62, 0, 64, 0, 66, 0, 65, 0, 58, 0, 67, 0, 60, 0, 68, 0, 70, 0, 69, 0, 6, 0, 7, 0, 71, 0, 72, 0, 74, 0, 73, 0, 75, 0, 77, 0, 76, 0, 78, 0, 80, 0, 79, 0, 81, 0, 83, 0, 82, 0, 84, 0, 86, 0, 85, 0, 78, 0, 87, 0, 80, 0, 88, 0, 90, 0, 89, 0, 91, 0, 93, 0, 92, 0, 51, 0, 52, 0, 94, 0, 95, 0, 97, 0, 96, 0, 98, 0, 100, 0, 99, 0, 91, 0, 92, 0, 101, 0, 102, 0, 104, 0, 103, 0, 105, 0, 107, 0, 106, 0, 0, 0, 1, 0, 27, 0, 47, 0, 108, 0, 40, 0, 108, 0, 47, 0, 109, 0, 8, 0, 111, 0, 110, 0, 111, 0, 8, 0, 6, 0, 9, 0, 10, 0, 112, 0, 12, 0, 11, 0, 9, 0, 14, 0, 15, 0, 23, 0, 17, 0, 18, 0, 25, 0, 20, 0, 21, 0, 113, 0, 23, 0, 24, 0, 114, 0, 25, 0, 26, 0, 115, 0, 27, 0, 28, 0, 116, 0, 117, 0, 119, 0, 118, 0, 120, 0, 122, 0, 121, 0, 123, 0, 125, 0, 124, 0, 126, 0, 128, 0, 127, 0, 129, 0, 131, 0, 130, 0, 47, 0, 38, 0, 132, 0, 133, 0, 135, 0, 134, 0, 38, 0, 136, 0, 132, 0, 67, 0, 138, 0, 137, 0, 138, 0, 67, 0, 139, 0, 48, 0, 49, 0, 140, 0, 53, 0, 141, 0, 92, 0, 141, 0, 53, 0, 51, 0, 55, 0, 56, 0, 142, 0, 61, 0, 62, 0, 143, 0, 64, 0, 65, 0, 144, 0, 137, 0, 60, 0, 67, 0, 145, 0, 147, 0, 146, 0, 58, 0, 148, 0, 67, 0, 149, 0, 151, 0, 150, 0, 151, 0, 149, 0, 152, 0, 68, 0, 69, 0, 153, 0, 154, 0, 156, 0, 155, 0, 157, 0, 76, 0, 77, 0, 158, 0, 160, 0, 159, 0, 159, 0, 160, 0, 161, 0, 162, 0, 164, 0, 163, 0, 165, 0, 167, 0, 166, 0, 166, 0, 167, 0, 168, 0, 167, 0, 165, 0, 169, 0, 170, 0, 172, 0, 171, 0, 171, 0, 172, 0, 173, 0, 172, 0, 170, 0, 174, 0, 76, 0, 157, 0, 175, 0, 175, 0, 157, 0, 176, 0, 177, 0, 179, 0, 178, 0, 81, 0, 82, 0, 180, 0, 84, 0, 85, 0, 181, 0, 182, 0, 80, 0, 87, 0, 87, 0, 184, 0, 183, 0, 78, 0, 184, 0, 87, 0, 183, 0, 186, 0, 185, 0, 186, 0, 183, 0, 184, 0, 88, 0, 89, 0, 187, 0, 53, 0, 92, 0, 93, 0, 93, 0, 91, 0, 132, 0, 132, 0, 188, 0, 47, 0, 47, 0, 188, 0, 189, 0, 188, 0, 132, 0, 91, 0, 95, 0, 96, 0, 190, 0, 98, 0, 99, 0, 191, 0, 102, 0, 103, 0, 192, 0, 193, 0, 195, 0, 194, 0 ),
"blend_shape_data": [  ],
"format": 97559,
"index_count": 324,
"material": SubResource( 3 ),
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 196
}

[sub_resource type="CubeMesh" id=5]

[sub_resource type="SpatialMaterial" id=6]
albedo_color = Color( 0.458824, 0.85098, 0.494118, 1 )

[sub_resource type="PhysicsMaterial" id=7]

[sub_resource type="BoxShape" id=8]

[sub_resource type="BoxShape" id=9]

[sub_resource type="BoxShape" id=10]

[node name="Game" type="Spatial"]
transform = Transform( 1.14257, 0, 0, 0, 1, 0, 0, 0, 1.20062, -10.8827, 5.96304, -2.42747 )
script = ExtResource( 1 )

[node name="World" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.38543, 0, 0 )

[node name="Lava" parent="World" instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -6.47574, 0 )

[node name="Floor1" parent="World" instance=ExtResource( 3 )]
editor/display_folded = true
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 13.2013, -9.67991, 2.98427 )
collision_mask = 4

[node name="Platformer" type="KinematicBody" parent="World"]
editor/display_folded = true
transform = Transform( 1, 0, 0, 0, 1.3, 0, 0, 0, 1, 9.30903, -0.854897, -16.5435 )
collision_layer = 2
collision_mask = 5
script = ExtResource( 4 )

[node name="CollisionShape" type="CollisionShape" parent="World/Platformer"]
transform = Transform( 1.05, 0, 0, 0, 0.11, 0, 0, 0, 1.05, 0, 0, 0.0127277 )
shape = SubResource( 1 )

[node name="MeshPlatformer" type="MeshInstance" parent="World/Platformer"]
transform = Transform( 1, 0, 0, 0, 0.09, 0, 0, 0, 1, 0, 0, 0 )
layers = 2
mesh = SubResource( 4 )
material/0 = ExtResource( 6 )

[node name="Floor2" type="MeshInstance" parent="World"]
editor/display_folded = true
transform = Transform( 8.326, 0, 0, 0, 0.2, 0, 0, 0, 15, 8.592, 19.541, -0.38 )
mesh = SubResource( 5 )
material/0 = SubResource( 6 )

[node name="StaticBody" type="RigidBody" parent="World/Floor2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1.06, 0, 0, 0.0733801 )
collision_mask = 6
mode = 1
physics_material_override = SubResource( 7 )
contact_monitor = true
script = ExtResource( 7 )

[node name="CollisionShape" type="CollisionShape" parent="World/Floor2/StaticBody"]
transform = Transform( 1, 0, 0, 0, 0.5, 0, 0, 0, 0.95, 0, 0.677, -0.075 )
shape = SubResource( 8 )

[node name="Floor3" type="MeshInstance" parent="World"]
editor/display_folded = true
transform = Transform( 11, 0, 0, 0, 0.2, 0, 0, 0, 20, 47.2534, 19.5758, -4.98127 )
mesh = SubResource( 5 )
material/0 = SubResource( 6 )

[node name="StaticBody" type="StaticBody" parent="World/Floor3"]

[node name="CollisionShape" type="CollisionShape" parent="World/Floor3/StaticBody"]
shape = SubResource( 8 )

[node name="Bridge" parent="World" instance=ExtResource( 8 )]
transform = Transform( 1, 0, 0, 0, 0.999781, -0.0209424, 0, 0.0209424, 0.999781, 26.5583, 22.7692, 6.00105 )
collision_layer = 8
collision_mask = 4
gravity_scale = 1.5

[node name="StaticBodyBridge" type="StaticBody" parent="World"]
editor/display_folded = true
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 26.5578, 23.9474, 6.001 )
collision_layer = 8
collision_mask = 0

[node name="CollisionShape" type="CollisionShape" parent="World/StaticBodyBridge"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0811872, 0.59598, -0.0269055 )
shape = SubResource( 9 )
disabled = true

[node name="HingeJoint" type="HingeJoint" parent="World"]
transform = Transform( -4.37114e-008, 0, 1, 0, 1, 0, -1, 0, -4.37114e-008, 26.5578, 23.9474, 6.001 )
nodes/node_a = NodePath("../StaticBodyBridge")
nodes/node_b = NodePath("../Bridge")

[node name="Pillars" parent="World" instance=ExtResource( 9 )]
transform = Transform( 0.97, 0, 0, 0, 1.13, 0, 0, 0, 0.92, 26.5112, 20.677, 5.98431 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 10 )

[node name="Player" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.06771, -0.45376, 6.47542 )
collision_layer = 4
collision_mask = 11
mass = 0.3
gravity_scale = 0.5
continuous_cd = true
contacts_reported = 5
contact_monitor = true
script = ExtResource( 11 )

[node name="CollisionShape" type="CollisionShape" parent="Player"]
transform = Transform( 0.8, 0, 3.55271e-015, 0, 1.15, 0, -3.55271e-015, 0, 0.8, 0.130209, 0.613355, 0 )
shape = SubResource( 10 )

[node name="ARVROrigin" parent="Player" instance=ExtResource( 12 )]
editor/display_folded = true
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.548709, 0 )

[node name="ARVRCamera" parent="Player/ARVROrigin" index="0"]
transform = Transform( 0.87522, 0, 0, 0, 1, 0, 0, 0, 0.832903, 0, 1.8, 0 )

[node name="Function_Teleport" parent="Player/ARVROrigin/Left_Hand" index="0"]
collision_layer = 4

[node name="HUD_Anchor" parent="Player/ARVROrigin" index="3"]
editor/display_folded = true

[node name="Timer" type="Timer" parent="."]
pause_mode = 1
wait_time = 2.0
[connection signal="stopP" from="World/Floor2/StaticBody" to="World/Platformer" method="_on_Platform_stopP"]
[connection signal="moveB" from="Player" to="World/Bridge" method="on_Player_bridge"]
[connection signal="moveP" from="Player" to="World/Platformer" method="_on_Player_moveP"]
[connection signal="notmoveB" from="Player" to="World/Bridge" method="exit_Player_bridge"]
[connection signal="timeout" from="Timer" to="World/Bridge" method="_on_Timer_timeout"]

[editable path="World/Floor1"]

[editable path="Player/ARVROrigin"]
